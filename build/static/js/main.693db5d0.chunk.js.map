{"version":3,"sources":["HospitalResultItem.js","OxygenTrackerResults.js","OxygenTrackerMainPage.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Title","Typography","Paragraph","Text","Link","HospitalResultItem","props","data","style","width","xs","sm","md","level","name","strong","address","href","maps_link","target","contact","join","marginBottom","oxygen","current","required","comment","length","justify","span","underline","lastUpdated","OxygenTrackerResults","results","textAlign","size","header","bordered","dataSource","Object","keys","renderItem","item","Item","hospitalId","Content","Layout","Header","Footer","Option","Select","OxygenTrackerMainPage","useState","cities","setCities","hospitals","setHospitals","useEffect","databaseRef","ref","child","get","then","snapshot","exists","val","catch","error","message","info","showSearch","placeholder","optionFilterProp","onChange","value","cityId","console","log","filterOption","input","option","children","toLowerCase","indexOf","map","cityKey","City","Home","className","paddingTop","color","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.693db5d0.chunk.js","sourcesContent":["import { Col, Row, Typography, Divider } from \"antd\";\nimport \"./App.css\";\nconst { Title, Paragraph, Text, Link } = Typography;\n\nfunction HospitalResultItem(props) {\n  const { data } = props;\n\n  return (\n    data && (\n      <div style={{ width: \"100%\" }}>\n        <Row>\n          <Col xs={24} sm={24} md={12}>\n            <Title level={4}>{data.name}</Title>\n            <Text strong={true}>Address</Text>\n            <Paragraph>\n              {data.address + \" \"}{\" \"}\n              <Link href={data.maps_link} target=\"_blank\">\n                Map\n              </Link>\n            </Paragraph>\n            <Text strong={true}>Contact</Text>\n            <Paragraph>{data.contact.join(\" | \")} </Paragraph>\n          </Col>\n          <Col xs={24} sm={24} md={12} style={{ marginBottom: 0 }}>\n            <Paragraph strong={true}>Oxygen (in Litres)</Paragraph>\n            <Title level={3}>\n              {data.oxygen.current + \" / \" + data.oxygen.required}\n            </Title>\n            {data.oxygen.comment && data.oxygen.comment.length > 0 && (\n              <Paragraph>{data.oxygen.comment}</Paragraph>\n            )}\n          </Col>\n        </Row>\n        <Row justify=\"start\">\n          <Col span={24}>\n            <Text strong={true}>Last updated: </Text>\n            <Text underline={true}> {data.oxygen.lastUpdated}</Text>\n          </Col>\n        </Row>\n        <Divider />\n      </div>\n    )\n  );\n}\n\nexport default HospitalResultItem;\n","import { List, Typography } from \"antd\";\nimport \"./App.css\";\nimport HospitalResultItem from \"./HospitalResultItem\";\nconst { Title } = Typography;\n\nfunction OxygenTrackerResults(props) {\n  const { results } = props;\n\n  return (\n    results && (\n      <div style={{ textAlign: \"start\" }}>\n        <List\n          size=\"large\"\n          header={<Title level={3}>Hospitals</Title>}\n          bordered\n          dataSource={Object.keys(results)}\n          renderItem={(item) => (\n            <List.Item>\n              <HospitalResultItem data={results[item]} hospitalId={item} />\n            </List.Item>\n          )}\n        />\n      </div>\n    )\n  );\n}\n\nexport default OxygenTrackerResults;\n","import { Layout, message, Select } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport OxygenTrackerResults from \"./OxygenTrackerResults\";\nconst { Content, Footer, Header } = Layout;\nconst { Option } = Select;\n\nfunction OxygenTrackerMainPage(props) {\n  const [cities, setCities] = useState([]);\n  const [hospitals, setHospitals] = useState(null);\n  useEffect(() => {\n    loadCities();\n  });\n\n  function loadCities() {\n    props.databaseRef\n      .ref()\n      .child(\"cities\")\n      .get()\n      .then((snapshot) => {\n        if (snapshot.exists()) {\n          setCities(snapshot.val());\n        } else {\n          setCities([]);\n        }\n      })\n      .catch((error) => {\n        message.info(\"No data available\");\n        setCities([]);\n      });\n  }\n\n  function loadHospitals(cityId) {\n    props.databaseRef\n      .ref()\n      .child(\"hospitals\")\n      .child(cityId)\n      .get()\n      .then((snapshot) => {\n        if (snapshot.exists()) {\n          setHospitals(snapshot.val());\n        } else {\n          setHospitals([]);\n        }\n      })\n      .catch((error) => {\n        message.info(\"No hospitals found\");\n        setHospitals(null);\n      });\n  }\n\n  function onChange(value) {\n    console.log(`selected ${value}`);\n    loadHospitals(value);\n  }\n  return (\n    <div>\n      <Layout>\n        <Header>\n          <Select\n            showSearch\n            style={{ width: 200 }}\n            placeholder=\"Select a city\"\n            optionFilterProp=\"children\"\n            onChange={onChange}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            {Object.keys(cities).map((cityKey) => (\n              <Option key={cityKey} value={cityKey}>\n                {cities[cityKey].City}\n              </Option>\n            ))}\n          </Select>\n        </Header>\n        <Content>\n          <OxygenTrackerResults results={hospitals} />\n        </Content>\n      </Layout>\n    </div>\n  );\n}\n\nexport default OxygenTrackerMainPage;\n","import { Layout, Typography } from \"antd\";\nimport \"./App.css\";\nimport OxygenTrackerMainPage from \"./OxygenTrackerMainPage\";\nconst { Content, Footer, Header } = Layout;\nconst { Title } = Typography;\n\nfunction Home(props) {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Header style={{ paddingTop: \"10px\" }}>\n          <Title style={{ color: \"white\" }} level={3}>\n            Hospital Oxygen Tracker\n          </Title>\n        </Header>\n        <Content>\n          <div>\n            <OxygenTrackerMainPage {...props} />\n          </div>\n        </Content>\n        <Footer>Maintained by Bharat Covid Relief Group</Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default Home;\n","import \"./App.css\";\nimport Home from \"./Home\";\n\nfunction App(props) {\n  return (\n    <Home {...props}/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport 'antd/dist/antd.css';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC5yJSnQRHNPdF0VaeVBWbii44ukOty_Yw\",\n  authDomain: \"co-ox9.firebaseapp.com\",\n  databaseURL: \"https://co-ox9-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"co-ox9\",\n  storageBucket: \"co-ox9.appspot.com\",\n  messagingSenderId: \"270678706924\",\n  appId: \"1:270678706924:web:d766a82b1ba96be6f233c9\",\n  measurementId: \"G-9H22682NTM\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst db= firebase.database()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App databaseRef={db}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}